package solutions

import (
	"github.com/emetko/goeuler/utils"
	"testing"
)

/*
------------------------------------------------------------------------------------------------
 author: Eltjon Metko        ::         Pentagon numbers
------------------------------------------------------------------------------------------------
Problem URL : https://projecteuler.net/problem=44

Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
------------------------------------------------------------------------------------------------
*/

func Euler044() int {
	p := make([]int, 0, 1000)
	for i := 1; ; i++ {
		pi := utils.Pentagonal(i)
		p = append(p, pi)
		for j := i - 1; j > 0; j-- {
			if utils.IsPentagonal(pi+p[j]) && utils.IsPentagonal(pi-p[j]) {
				return pi - p[j]
			}
		}
	}
}

func TestEuler044(t *testing.T) {
	expected := 5482660
	got := Euler044()
	t.Logf("Answer: %v | Expected %v", got, expected)
	if got != expected {
		t.Fail()
	}
}
