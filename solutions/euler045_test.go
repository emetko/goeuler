package solutions

import (
	"github.com/emetko/goeuler/utils"
	"testing"
)

/*
------------------------------------------------------------------------------------------------
 author: Eltjon Metko        ::         Triangular, pentagonal, and hexagonal
------------------------------------------------------------------------------------------------
Problem URL : https://projecteuler.net/problem=45

Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
Triangle                Tn=n(n+1)/2           	1, 3, 6, 10, 15, ...
Pentagonal				Pn=n(3n−1)/2			1, 5, 12, 22, 35, ...
Hexagonal				Hn=n(2n−1)				1, 6, 15, 28, 45, ...

It can be verified that T285 = P165 = H143 = 40755.
Find the next triangle number that is also pentagonal and hexagonal.
------------------------------------------------------------------------------------------------
*/

func Euler045() int {
	for i := 286; ; i++ {
		tn := i * (i + 1) / 2
		if utils.IsPentagonal(tn) && utils.IsHexagonal(tn) {
			return tn
		}
	}
	return -1
}

func TestEuler045(t *testing.T) {
	expected := 1533776805
	got := Euler045()
	t.Logf("Answer: %v | Expected %v", got, expected)
	if got != expected {
		t.Fail()
	}
}
